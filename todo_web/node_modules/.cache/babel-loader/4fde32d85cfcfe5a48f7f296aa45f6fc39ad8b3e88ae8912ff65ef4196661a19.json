{"ast":null,"code":"var _jsxFileName = \"/Users/masanao/Desktop/environment/spa_todo_app/todo_web/src/App.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { Center, Box, CheckboxGroup, Text, Input, Button, Flex } from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport Task from \"./components/Task\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst END_POINT = \"http://localhost:3001/tasks\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [name, setName] = useState(\"\");\n  const fetch = async () => {\n    const res = await axios.get(END_POINT);\n    setTasks(res.data);\n  };\n  const createTask = async () => {\n    await axios.post(END_POINT, {\n      name: name,\n      is_done: false\n    });\n    setName(\"\");\n    fetch();\n  };\n  const deleteTask = async id => {\n    await axios.delete(`${END_POINT}/${id}`);\n    setName(\"\");\n    fetch();\n  };\n  useEffect(() => {\n    fetch();\n  }, []);\n  const toggleIsDone = async (index, id) => {\n    const _IsDone = tasks[index].isDone;\n    await axios.put(`${END_POINT}/${id}`, {\n      is_done: !newIs\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mt: \"64px\",\n    children: /*#__PURE__*/_jsxDEV(Center, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          mb: \"24px\",\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"24px\",\n            as: \"b\",\n            children: \"\\u30BF\\u30B9\\u30AF\\u4E00\\u89A7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          mb: \"24px\",\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"\\u8FFD\\u52A0\\u3059\\u308B\\u30BF\\u30B9\\u30AF\\u3092\\u5165\\u529B\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            ml: \"16px\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              colorScheme: \"teal\",\n              onClick: createTask,\n              children: \"\\u30BF\\u30B9\\u30AF\\u3092\\u4F5C\\u6210\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CheckboxGroup, {\n          children: tasks.map((task, index) => {\n            return /*#__PURE__*/_jsxDEV(Task, {\n              id: task.id,\n              index: index,\n              name: task.name,\n              isDone: task.isDone,\n              toggleIsDone: toggleIsDone,\n              deleteTask: deleteTask\n            }, task.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"DWIPJouDqKHcwEilupxaBIVsLpc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Center","Box","CheckboxGroup","Text","Input","Button","Flex","axios","Task","END_POINT","App","tasks","setTasks","name","setName","fetch","res","get","data","createTask","post","is_done","deleteTask","id","delete","toggleIsDone","index","_IsDone","isDone","put","newIs","e","target","value","map","task"],"sources":["/Users/masanao/Desktop/environment/spa_todo_app/todo_web/src/App.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { \n  Center, \n  Box, \n  CheckboxGroup, \n  Text,\n  Input,\n  Button,\n  Flex, \n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\n\nimport Task from \"./components/Task\";\nimport './App.css';\n\nconst END_POINT = \"http://localhost:3001/tasks\"\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [name, setName] = useState(\"\");\n\n  const fetch = async () => {\n    const res = await axios.get(END_POINT\n    );\n    setTasks(res.data);\n  };\n  \n  const createTask = async () => {\n    await axios.post(END_POINT, {name: name, is_done: false});\n    setName(\"\");\n    fetch();\n  }\n\n  const deleteTask = async (id) => {\n    await axios.delete(`${END_POINT}/${id}`);\n    setName(\"\");\n    fetch();\n  }\n  \n  useEffect(() => {\n    fetch();\n  },[]);\n\n  const toggleIsDone = async (index, id) => {\n    const _IsDone = tasks[index].isDone;\n    await axios.put(`${END_POINT}/${id}`, {\n      is_done: !newIs\n    })\n  };\n\n  return (\n    <Box mt=\"64px\">\n      <Center>\n        <Box>\n          <Box mb=\"24px\">\n            <Text fontSize=\"24px\" as=\"b\">\n              タスク一覧\n            </Text>\n          </Box>\n          <Flex mb=\"24px\">\n            <Input\n              placeholder=\"追加するタスクを入力\"\n              value={name}\n              onChange={e => setName(e.target.value)}\n            />\n            <Box ml=\"16px\">\n              <Button colorScheme=\"teal\" onClick={createTask}>\n                タスクを作成\n              </Button>\n            </Box>\n          </Flex>\n          <CheckboxGroup>\n            {tasks.map((task, index)=> {\n              return (\n                <Task\n                key={task.name}\n                id={task.id}\n                index={index}\n                name={task.name}\n                isDone={task.isDone}\n                toggleIsDone={toggleIsDone}\n                deleteTask={deleteTask}\n                />\n                )\n              })}\n          </CheckboxGroup>\n        </Box>\n      </Center>\n    </Box>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}